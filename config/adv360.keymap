/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
     &kp EQUAL     &kp N1        &kp N2    &kp N3     &kp N4  &kp N5                    &tog 2                                                                            &mo 3  &kp N6  &kp N7     &kp N8    &kp N9         &kp N0  &kp MINUS
       &kp TAB      &kp Q         &kp W     &kp L      &kp K   &kp J            &macro_kinesis                                                                           &tog 1   &kp B   &kp F      &kp U     &kp Y  &kp BACKSPACE   &kp BSLH
 &kp SEMICOLON      &kp A         &kp R     &kp S      &kp T   &kp G                     &mo 2     &kp SPACE   &kp DEL                  &kp SPACE         &mo 1           &none   &kp P   &kp N      &kp E     &kp I          &kp O    &kp SQT
     &kp LSHFT      &kp Z         &kp X     &kp C      &kp D   &kp V                                          &kp HOME                  &kp PG_UP                                 &kp M   &kp H  &kp COMMA   &kp DOT      &kp ENTER  &kp SLASH
       &kp ESC  &kp GRAVE  &kp LEFT_WIN  &kp LEFT  &kp RIGHT                         &kp LCTRL  &kp LEFT_ALT   &kp END                  &kp PG_DN  &kp LEFT_WIN  &kp LEFT_SHIFT          &kp UP   &kp DOWN  &kp LBKT       &kp RBKT      &mo 2
            >;
        };

        layer_keypad {
            bindings = <
      &kp ESC  &trans  &trans  &trans                &trans                 &trans                       &trans                                                                         &trans  &kp KP_MULTIPLY     &kp KP_SLASH  &kp KP_EQUAL  &kp KP_LPAR   &kp KP_RPAR  &kp KP_CLEAR
       &trans  &trans  &trans  &trans        &kp LEFT_BRACE        &kp RIGHT_BRACE                        &none                                                                         &tog 1      &kp KP_PLUS        &kp KP_N7     &kp KP_N8    &kp KP_N9        &trans        &trans
 &kp CAPSLOCK  &trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                        &none         &trans  &trans                  &trans         &trans            &none     &kp KP_MINUS        &kp KP_N4     &kp KP_N5    &kp KP_N6   &kp KP_PLUS        &trans
       &trans  &trans  &trans  &trans      &kp LEFT_BRACKET      &kp RIGHT_BRACKET                                              &trans                  &trans                                   &kp UNDERSCORE        &kp KP_N1     &kp KP_N2    &kp KP_N3        &trans        &trans
       &trans  &trans  &trans  &trans                &trans                                   &kp RIGHT_CONTROL  &kp RIGHT_ALT  &trans                  &trans  &kp RIGHT_WIN  &kp RIGHT_SHIFT                   &kp KP_NUMBER_0  &kp KP_COMMA   &kp KP_DOT  &kp KP_ENTER        &trans
            >;
        };

        layer_fn {
            bindings = <
 &kp ESC   &kp F1   &kp F2   &kp F3   &kp F4   &kp F5            &tog 2                                                  &trans  &trans          &kp F10            &kp F11       &kp F12  &trans  &trans
  &trans   &kp F6   &kp F7   &kp F8   &kp F9  &kp F10            &trans                                                  &trans  &trans           &kp F7             &kp F8        &kp F9  &trans  &trans
  &trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15            &trans  &trans  &trans                  &trans  &trans  &trans  &trans           &kp F4             &kp F5  &kp NUMBER_6  &trans  &trans
  &trans   &trans   &trans   &trans   &trans   &trans                            &trans                  &trans                  &trans           &kp F1             &kp F2        &kp F3  &trans  &trans
  &trans   &trans   &trans   &trans   &trans                     &trans  &trans  &trans                  &trans  &trans  &trans          &kp C_VOLUME_UP  &kp C_VOLUME_DOWN    &kp C_MUTE  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
 &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                          &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
      &none         &none         &none         &none         &none         &none                       &bootloader                                                                     &bootloader         &none         &none         &none         &none         &none   &none
      &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5       &none   &none                   &none       &none  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
      &none         &none         &none         &none         &none         &none                                                 &none                   &none                                             &none         &none         &none         &none         &none   &none
      &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                   &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

    };
};
